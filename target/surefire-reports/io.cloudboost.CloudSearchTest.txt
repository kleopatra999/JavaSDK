-------------------------------------------------------------------------------
Test set: io.cloudboost.CloudSearchTest
-------------------------------------------------------------------------------
Tests run: 27, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 15.423 sec <<< FAILURE!
shouldSortElementsInDescendingOrder(io.cloudboost.CloudSearchTest)  Time elapsed: 0.417 sec  <<< FAILURE!
junit.framework.AssertionFailedError: {"status":"400","message":"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][0]: SearchParseException[[bengi123][0]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must\":[{\"term\":{\"ACL.read.allow.user\":\"all\"}}],\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:23.809Z\"}}}],\"must_not\":[]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"desc\"}}]}]]]; nested: SearchParseException[[bengi123][0]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][1]: SearchParseException[[bengi123][1]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must\":[{\"term\":{\"ACL.read.allow.user\":\"all\"}}],\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:23.809Z\"}}}],\"must_not\":[]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"desc\"}}]}]]]; nested: SearchParseException[[bengi123][1]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][2]: SearchParseException[[bengi123][2]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must\":[{\"term\":{\"ACL.read.allow.user\":\"all\"}}],\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:23.809Z\"}}}],\"must_not\":[]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"desc\"}}]}]]]; nested: SearchParseException[[bengi123][2]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][3]: SearchParseException[[bengi123][3]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must\":[{\"term\":{\"ACL.read.allow.user\":\"all\"}}],\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:23.809Z\"}}}],\"must_not\":[]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"desc\"}}]}]]]; nested: SearchParseException[[bengi123][3]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][4]: SearchParseException[[bengi123][4]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must\":[{\"term\":{\"ACL.read.allow.user\":\"all\"}}],\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:23.809Z\"}}}],\"must_not\":[]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"desc\"}}]}]]]; nested: SearchParseException[[bengi123][4]: query[ConstantScore(BooleanFilter(+cache(ACL.read.allow.user:all) cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:23.809Z TO *])))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }]"}
	at junit.framework.Assert.fail(Assert.java:47)
	at io.cloudboost.CloudSearchTest$6.done(CloudSearchTest.java:170)
	at io.cloudboost.CloudSearch.search(CloudSearch.java:225)
	at io.cloudboost.CloudSearchTest.shouldSortElementsInDescendingOrder(CloudSearchTest.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)

shouldOrderByAsc(io.cloudboost.CloudSearchTest)  Time elapsed: 0.427 sec  <<< FAILURE!
junit.framework.AssertionFailedError: {"status":"400","message":"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][0]: SearchParseException[[bengi123][0]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:24.268Z\"}}}],\"must_not\":[],\"must\":[{\"exists\":{\"field\":\"age\"}},{\"term\":{\"ACL.read.allow.user\":\"all\"}}]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"asc\"}}]}]]]; nested: SearchParseException[[bengi123][0]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][1]: SearchParseException[[bengi123][1]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:24.268Z\"}}}],\"must_not\":[],\"must\":[{\"exists\":{\"field\":\"age\"}},{\"term\":{\"ACL.read.allow.user\":\"all\"}}]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"asc\"}}]}]]]; nested: SearchParseException[[bengi123][1]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][2]: SearchParseException[[bengi123][2]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:24.268Z\"}}}],\"must_not\":[],\"must\":[{\"exists\":{\"field\":\"age\"}},{\"term\":{\"ACL.read.allow.user\":\"all\"}}]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"asc\"}}]}]]]; nested: SearchParseException[[bengi123][2]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][3]: SearchParseException[[bengi123][3]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:24.268Z\"}}}],\"must_not\":[],\"must\":[{\"exists\":{\"field\":\"age\"}},{\"term\":{\"ACL.read.allow.user\":\"all\"}}]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"asc\"}}]}]]]; nested: SearchParseException[[bengi123][3]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }{[zOZ7GjZmQwm8pznmmnkFVQ][bengi123][4]: SearchParseException[[bengi123][4]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"should\":[{\"missing\":{\"field\":\"expires\"}},{\"range\":{\"expires\":{\"gte\":\"2016-03-01T15:51:24.268Z\"}}}],\"must_not\":[],\"must\":[{\"exists\":{\"field\":\"age\"}},{\"term\":{\"ACL.read.allow.user\":\"all\"}}]}},\"query\":{\"match_all\":{}}}},\"size\":10,\"from\":0,\"sort\":[{\"age\":{\"order\":\"asc\"}}]}]]]; nested: SearchParseException[[bengi123][4]: query[ConstantScore(BooleanFilter(cache(NotFilter(cache(BooleanFilter(_field_names:expires)))) cache(expires:[2016-03-01T15:51:24.268Z TO *]) +cache(BooleanFilter(_field_names:age)) +cache(ACL.read.allow.user:all)))],from[0],size[10]: Parse Failure [No mapping found for [age] in order to sort on]]; }]"}
	at junit.framework.Assert.fail(Assert.java:47)
	at io.cloudboost.CloudSearchTest$4.done(CloudSearchTest.java:100)
	at io.cloudboost.CloudSearch.search(CloudSearch.java:225)
	at io.cloudboost.CloudSearchTest.shouldOrderByAsc(CloudSearchTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)

equalToShouldWorkOnCloudSearchOverCloudObject(io.cloudboost.CloudSearchTest)  Time elapsed: 0.518 sec  <<< FAILURE!
junit.framework.AssertionFailedError: Cannot PUT /bengi123/table/blrzkawf
	at junit.framework.Assert.fail(Assert.java:47)
	at io.cloudboost.CloudSearchTest$27.done(CloudSearchTest.java:921)
	at io.cloudboost.CloudTable.save(CloudTable.java:371)
	at io.cloudboost.CloudSearchTest.equalToShouldWorkOnCloudSearchOverCloudObject(CloudSearchTest.java:915)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)

